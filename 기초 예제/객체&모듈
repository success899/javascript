객체
:   데이터가 추가되면 배열 전체에서 중복되지 않는 인덱스가 자동으로 만들어져서 추가된 데이터에 대한 식별자가 된다.
    이 인덱스를 이용해서 데이터를 가져오게 되는 것이다.
    만약 인덱스로 문자를 사용하고 싶다면 객체(dictionary)를 사용해야 한다.
    다른 언어에서는 연관배열(associative array) 또는 맵( map), 딕셔너리(Dictionary)라는 데이터 타입이 객체에 해당한다.


모듈
:   프로그램은 작고 단순한 것에서 크고 복잡한 것으로 진화한다.
    그 과정에서 코드의 재활용성을 높이고, 유지보수를 쉽게 할 수 있는 다양한 기법들이 사용된다.
    그 중의 하나가 코드를 여러개의 파일로 분리하는 것이다.

    순수한 자바스크립트에서는 모듈(module)이라는 개념이 분명하게 존재하지는 않는다.
    하지만 자바스크립트가 구동되는 호스트 환경에 따라서 서로 다른 모듈화 방법이 제공되고 있다. 

    기대효과
    :   자주 사용되는 코드를 별도의 파일로 만들어서 필요할 때마다 재활용할 수 있다.
        코드를 개선하면 이를 사용하고 있는 모든 애플리케이션의 동작이 개선된다.
        코드 수정 시에 필요한 로직을 빠르게 찾을 수 있다.
        필요한 로직만을 로드해서 메모리의 낭비를 줄일 수 있다.
        한번 다운로드된 모듈은 웹브라우저에 의해서 저장되기 때문에 동일한 로직을 로드 할 때 시간과 네트워크 트래픽을 절약 할 수 있다. (브라우저에서만 해당)